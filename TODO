TODO here:

[ ] Pause -- try to sabotage pause-as-slow-motion
[ ] MIDI per-device running status
[ ] Per-stroke feedback re timing, the bar isn't enough.
[ ] High scores
[ ] Optionalize ossmidi
[ ] MacOS MIDI in
[ ] MS Windows MIDI in
[ ] Custom mapping of MIDI events? See ch_app_midi_note_on
[ ] "Select song" or some orderly auto-selection, don't leave it random.

Rabbit:
[ ] Video, audio, input drivers for non-linux host (Rabbit?)
[ ] Hide cursor: Rabbit
[ ] Rabbit CLI: "play" command to preview a MIDI file
[ ] synth: copy and dc ops
[ ] Cache PCMs
[ ] Do something about the %#@ latency!
[ ] Expose LIBS and CFLAGS for client app

----- COMPLETED OR DECLINED

[x] Can I make exactly 1/2-phase less damaging?
[x] 50-point minimum per line, and 1000-point bonus at level-up.
xxx Automated speed testing. I need to see game->fallskip in motion.
  [x] Verify input restriction.
  ...frame-step mode covers it
[x] Next Brick got corrupted somehow, sometimes shows multiple sprites or something?
  At level-up, there seems to be one frame with misplaced sprites -- you can see them top-left corner.
  [x] Fireworks: ensure initial position
  [x] Next can acquire fireworks tiles too. I bet we're using direct indices in a sprite group.
    ...yep: ch_game_populate_sprites_for_shape
  [x] Now I see Next showing the right tileid sometimes but the wrong shape... the hell?
    ...oops missed one (game->sprites)
[x] Use this suspend feature to confirm level 10 is impossible.
  10 and 11 are just barely possible.
  [x] 12 might be, if you can arrange to get only I bricks (no other brick can reach the left edge)
    ...possible, possible to get all tetrisses in fact
    Not possible with random bricks.
[x] !!! timing went out of sync
  I'm pretty confident this is a defect in the song. It happens predictably at a noticeable point.
  Same problem in 14.
  Since these are both a bit slow anyway, try doubling the rate.
  [x] 13: Doubling helps a little, but now the lamp rate is really fast (makes it almost impossible at higher tempos).
    Problem here is that the song is actually defective, you can hear it.
    [x] Can I locate and repair the song's defect? YES
      [x] Confirm it's just one defect and record the approximate time.
        A revelation! It happens right at the end.
        [x] Is that in the original song, or does it happen during Rabbit's reencoding?
          ORIGINAL: Total time 44736 ticks, ending at phase 0.5
      MTrk 1 and 2 (of 3) both end at phase 0.5, tick 44736.
      [x] Add a dummy event on the end of MTrk 2. Starts at 3551 (incl header)
        division 384
        MTrk 2 ends with some Note Off and delay 0x81 0x40 -- easy! Change to 0x83 0x00, length doesn't change.
    It now ends at 1/4 bar, a little bit jarring? But not a technical problem.
  [x] 14
    Again it happens right at the end: tick 55104, ending at phase 0.5
    Division 384.
    Ha, it's pretty much exactly like 14, do the same thing.
    14 is still slow, it's difficult
[x] Pretty confident now, so review all the remaining songs
[x] Allow rotate and move during elimination blackout. But not drop!
[x] Some feedback on level changes.
[x] Lobby: If we're keeping it at two options, don't wrap around.
[x] Prettier font.
8x8 tiles yields a 32x18 grid.
[x] Is that big enough? 8x16 or 9x18 if we can tolerate no header or footer
  [x] What is the size of NES Tetris's playable area? 10x20
  [x] Can we handle non-power-of-two tile sizes? YES
...6x6
[x] End game
[x] Shuffle new brick low edge to y=-1
[x] Movement
[x] Rotation
[x] Line elimination
[x] Drop
[x] I've seen bricks get stuck at the top, how did that happen?
  Seems only to be immediately after clearing a line.
  ch_game_update(), I was allowing some frames to execute during the elimination blink
[x] Rearrange the canonical shapes, eg the vertex of the T should always be in the same place.
  How NES Tetris does it:
   - Z: 2-cell column stays put. (remains at lowest point)
   - S: Pivots on middle-top cell in horz orientation.
   - I: Tall goes one row lower, pivots on the second tile from right.
   - L: Middle of long bar stays put.
   - L reverse: Same as L.
   *** The Ls are canonically back-up, not feet-on-the-floor as I have them.
   ...fwiw this means all except "I" are canonically two tiles tall.
   - T: Central tile stays put.
   - O: No rotation.
[x] Start with brick fully onscreen like NES.
  [x] Does NES have a bit of a delay when a brick appears? NO not that i can measure
[x] Should we nudge on rotation when blocked horizontally?
  [x] Does NES Tetris do anything like that?
  NO
[x] Eliminating a line way top, where the incoming brick is still partly offscreen, we discard the offscreen part.
  [x] Is this consistent with NES Tetris? Is the situation even possible there?
  This is fantastically difficult to effect, it's not worth worrying about.
NB: NES Tetris permits bricks to overlap any existing brick that they touch initially.
  I don't think we'll be able to pull that off without a pretty big re-think, and I don't think it's worth it.
  For us, if a brick starts overlapped, game over.
[x] MIDI In
[x] Count lines
xxx Drop score -- not convinced we need this
[x] Rhythm score
  [x] Rabbit: Add (framesperqnote) to rb_song, and (elapsedframes) to rb_song_player.
    Then a public "get_song_phase()" returning (p,c) from the synth context.
[x] Display lines and score
[x] Background music
[x] Get tempo from song
[x] Sound effects
[x] "Next brick"
[x] Initial speed, and speed advancement
  Idea: Allow the game to become technically impossible due to speed, and make that limit reachable, like 50 or 100 lines.
  The challenge is to squeeze in as many points as you can in the limited time available.
[x] Adjust music tempo according to speed?
[x] Full graphics -- fixed tile per shape?
[x] Clean up building the UI grid in game
[x] Some like "WOW!" temporary UI at each line -- show the one-line score
[x] Use sprites for "next brick", center in box
[x] Restrict input to one stroke per key per frame
[x] Rabbit: Some problem with sound effects. "rotate" was silent, restarted and then it's fine (no rebuild of archive).
xxx Rabbit: Seems like events get dropped when playing at high speed.
xxx Remove Rabbit.
  If not the whole thing, at least replace its synthesizer with Beepbot.
  ...hold off on this, i'm kind of digging rabbit now

[x] !!! Tempo going haywire, noticed especially in song 9.
  First beat is long but i think that's to be expected.
A little nuts around 1:15:
beatc  39 ---------------------------------------
beatc  39 ---------------------------------------
beatc  39 ---------------------------------------
beatc  20 --------------------
beatc  59 -----------------------------------------------------------
beatc  19 -------------------
beatc  59 -----------------------------------------------------------
beatc  18 ------------------
beatc  59 -----------------------------------------------------------
beatc  39 ---------------------------------------
beatc  39 ---------------------------------------
[x] Does that happen consistently? ...YES
...rb_song_player_update(): We jump player->elapsedsourceframes immediately upon consuming a DELAY event.
  That could throw the timing off.
  There's no good solution here. Actual song time elapsed is at rb_song_player_advance(), in scaled output frames.
  [x] Try diving that by tempomultiplier, but sync the source time when delay reaches zero each time.
  ...steady as a rock, hell yeah.
[x] As long as I've got this beat measurement set up, check all the songs:
  1 perfect
  2 perfect (but short, it gets annoying in real life)
  3 FIXED: long beats (~47 at 1.2). if it's possible at all to salvage this let's do because it is just perfect musically
  4 short beats (~19 at 1.2), steady enough
  5 perfect
  8 beats a bit short (~23 at 1.2), love this song tho so i think it's ok. long too: 12 minutes at 1.2
  12 a hair long (~33 at 1.2) and there's a few places the tempo breaks down. i like this one so much i'm tempted to rewrite it
  13 a bit long (~35 at 1.2) and total length short (1:09 at 1.2), but nothing to complain about
  14 long beats (~44 at 1.2), some rough patches, eg right off the bat, but overall nice

[x] Script to double MIDI file's qnote intervals without changing the output.
[x] Dim the rhythm lamp and zero rhythm bar when game ends.
[x] Clean loading of music
[x] Game over screen -- esp we want to see the score please!
[x] Lobby
xxx Enumerate shapes instead of generalizing (ch_game_obj.c)
[x] Preprocess MIDI files, remove redundant cruft. In Rabbit CLI.
xxx At least one of these songs is abombinably slow. Not useable as is.

[x] Decent sound effects.
  Getting a line should kind of Royal Fanfare.
[x] Determine which programs are needed.
    0 Acoustic Grand Piano (6,9,10,12) (implicit: 3,4,5,7,8,11,13)
    3 Honky Tonk Piano (14)
    6 Harpsichord (2)
   40 Violin (1,2)
   45 Pizzicato Strings (1)
   47 Timpani (6)
   48 String Ensemble 1 (6)
   56 Trumpet (6)
   60 French Horn (6)
   68 Oboe (2,6)
   70 Bassoon (6)
   71 Clarinet (6)
   73 Flute (6)
  112 Tinkle Bell (1)
xxx Good set of songs.
  - Eliminate 6, it makes no sense.
  - 14 switches phase halfway thru. Fix that or eliminate it.
  - 12 i think does the same? tempo goes a little nuts sometimes
  - 10 i absolutely love and can't live without, but can we maybe double the tempo?

[x] What does Rabbit do when a song does not emit Program Change? eg 7(No03_Albmblatt) and 8(nobm) do not.
  Doesn't matter. They get pressed into a format with per-note program, and default to zero.
[x] dvorak-o96-1.mid: I love this song, it's perfect but the timing is screwy.
  A few seconds in, notes start appearing at +5-tick phase and they stay that way.
  [x] Is the file wrong, or am I?
    The file is wrong. It is perfectly explicit about adding this 5 tick phase shift around 0:04.503 6917 ticks
  xxx If it seems worthwhile, manually tweak this file to eliminate the shift.
    ...maybe no need, seems like we have a bunch of valid candidates.
  [x] Check other candidate files:
    * src/music/mutopia/nobm.mid: Absolutely beautiful: 0/0, 1/2, 1/4, 3/4, 1/3, 2/3
    * src/music/mutopia/rach-prelude23-05.mid: Similar. More 1/2 and 3/4 than nobm, and some 1/6 and 5/6 too, that's cool.
    * src/music/mutopia/rach-prelude23-09.mid: Gorgeous: Only x/4, and pretty uniform heights.
    * src/music/mutopia/dansenapolitaine.mid: Beautiful: Only x/4. Oddly, 1/2 is a little higher than 0/1.
    * src/music/mutopia/No03_Albumblatt.mid: Probly OK: 0/1, 1/2. Small but noticeable collection just north of 3/8.
    * src/music/mutopia/scriabin_etude_2_1.mid: Gorgeous: 0/1, 1/2, and a bit of 3/4
    * src/music/mutopia/Troldtog.mid: Probly OK. Almost all 0/1 and 1/2, some 1/8 1/4 3/8 3/4.
    * src/music/mutopia/turpin.mid: Beautiful: x/4 (1/2 noticeably higher than 0/1)
      src/music/mutopia/unpack/00_DvorakAmericanQuartet_Conducteur_Mvt2.mid: BAD! Most events slightly right-shifted from x/4
      src/music/mutopia/unpack/ballet.mid: Probly OK: Overwhelmingly 0/1 1/2, with some oddballs.
    * src/music/mutopia/unpack/Mvt3_Scherzo.mid: Good: Mostly 0/1, some 1/2, some worrying ~1/8
      src/music/mutopia/unpack/dvorak-o96-1.mid: BAD! Slight right-shift (see notes above)
    * src/music/mutopia/unpack/concerto-8-2.mid: Gorgeous, all x/4
    * src/music/mutopia/unpack/tuileries.mid: Gorgeous, all x/4 and mostly 0/1
    * src/music/mutopia/unpack/dvorak-o96-2.mid: Great! Much more consistent than o96-1, all 0/1 1/2 3/4
    * src/music/mutopia/unpack/dvorak-o96-3.mid: Very nice. Some triplets.
    * src/music/mutopia/unpack/anitrasdance.mid: Perfect, 0/1 and 1/2

Configure MPK225 and document steps.
  Using Preset 30 "Generic".
  Desired layout, pads only:
    Pad 1: LEFT    0x28 E_2 Electric Snare
    Pad 2: RIGHT   0x29 F_2 Lo Floor Tom
    Pad 3: DROP    0x24 C_2 Bass Drum 1
    Pad 5: CCLOCK  0x32 D_3 Hi Tom
    Pad 6: CLOCK   0x2d A_2 Lo Tom
    Pad 7: PAUSE   0x31 C#3 Crash Cymbal 1
  "Edit", strike the pad, arrows and dial to change key. Easy.
  Output on Channel 10, cool, Chetyorska doesn't care.
  MPK uses musicianly Note Names, what are the correct values here?
    Pad 1: 0x24 C_2
    Pad 2: 0x25 C#2
    Pad 3: 0x26 D_2
    Pad 4: 0x27 D#2
    Pad 5: 0x28 E_2
    Pad 6: 0x29 F_2
    Pad 7: 0x2a F#2
    Pad 8: 0x2b G_2
    ...beware, the musician's scale is C..B, the A above C_2 is A_2.
    ...who let musicians name things? that's ridiculous
  OK that was easy.
  My rotate pads are backward -- is that the setup, or are they backward internally?
    COUNTER 0x2d => clock
    CLOCK   0x32 => counter
    The error is right here. Fixing initial Desired Layout.
  Hmmm this is actually a pretty nice way to play Tetris.
